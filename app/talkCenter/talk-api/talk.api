syntax = "v1"

type (
	SendGiftReq {
		RoomId   int64  `json:"roomId"`
		Name     string `json:"name"`
		GiftType string `json:"giftType"`
	}
	SendGiftResp {
		status int64 `json:"status"`
	}
	SendRaffleReq {
		RoomId int64  `json:"roomId"`
		Name   string `json:"name"` //谁发起的
	}
	SendRaffleResp {
		status int64 `json:"status"`
	}
	CreatRoomReq {
		RoomId int64 `json:"roomId"`
	}
	CreatRoomResp {
		status int64 `json:"status"`
	}
	StartRaffleReq {
		RoomId    int64  `json:"roomId"`
		PrizeName string `json:"prizeName"`
		PrizeNum  int64  `json:"prizeNum"`
		Duration  int64  `json:"duration"`
	}
	StartRaffleResp {
		status int64 `json:"status"`
	}
	JoinRaffleReq {
		userName string `json:"userName"`
		roomId   int64  `json:"roomId"`
	}
	JoinRaffleResp {
		status int64 `json:"status"`
	}
)

@server (
	group: talk
//我是服务分组(会放在一个文件夹下)
//jwt: Auth
)
service talkCenter {
	@doc "talkWS"
	@handler TalkWS
	get /ws/:room

	//我是创建房间
	@doc "serveHome"
	@handler ServeHome
	get /:room

	@doc "gift"
	@handler giftHandler
	post /gift (SendGiftReq) returns (SendGiftResp)

	@doc "creatRoom"
	@handler creatRoomHandler
	post /creatRoom (CreatRoomReq) returns (CreatRoomResp)

	@doc "startRaffle"
	@handler startRaffleHandler
	post /startRaffle (StartRaffleReq) returns (StartRaffleResp)

	@doc "joinRaffle"
	@handler joinRaffleHandler
	post /joinRaffle (JoinRaffleReq) returns (JoinRaffleResp)
}

